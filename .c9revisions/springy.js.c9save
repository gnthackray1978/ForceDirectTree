{"ts":1360674841112,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Springy v1.0.1\n *\n * Copyright (c) 2010 Dennis Hotson\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n//https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\nif ( !Array.prototype.forEach ) {\n  Array.prototype.forEach = function( callback, thisArg ) {\n    var T, k;\n    if ( this == null ) {\n      throw new TypeError( \" this is null or not defined\" );\n    }\n    var O = Object(this);\n    var len = O.length >>> 0; // Hack to convert O.length to a UInt32\n    if ( {}.toString.call(callback) != \"[object Function]\" ) {\n      throw new TypeError( callback + \" is not a function\" );\n    }\n    if ( thisArg ) {\n      T = thisArg;\n    }\n    k = 0;\n    while( k < len ) {\n      var kValue;\n      if ( k in O ) {\n        kValue = O[ k ];\n        callback.call( T, kValue, k, O );\n      }\n      k++;\n    }\n  };\n}\n\n\nvar Node = function(id, data) {\n\tthis.id = id;\n\tthis.data = typeof(data) !== 'undefined' ? data : {};\n};\n\nvar Edge = function(id, source, target, data) {\n\tthis.id = id;\n\tthis.source = source;\n\tthis.target = target;\n\tthis.data = typeof(data) !== 'undefined' ? data : {};\n};\n\nvar Graph = function() {\n\tthis.nodeSet = {};\n\tthis.nodes = [];\n\tthis.edges = [];\n\tthis.adjacency = {};\n\n\tthis.nextNodeId = 0;\n\tthis.nextEdgeId = 0;\n\tthis.eventListeners = [];\n};\n\n\nGraph.prototype = {\n\n    addNode: function (node) {\n\t    if (typeof(this.nodeSet[node.id]) === 'undefined') {\n\t\t    this.nodes.push(node);\n\t    }\n\n\t    this.nodeSet[node.id] = node;\n\n\t    this.notify();\n\t    return node;\n    },\n    addEdge:function(edge) {\n\t    var exists = false;\n\t    this.edges.forEach(function(e) {\n\t\t    if (edge.id === e.id) { exists = true; }\n\t    });\n\n\t    if (!exists) {\n\t\t    this.edges.push(edge);\n\t    }\n\n\t    if (typeof(this.adjacency[edge.source.id]) === 'undefined') {\n\t\t    this.adjacency[edge.source.id] = {};\n\t    }\n\t    if (typeof(this.adjacency[edge.source.id][edge.target.id]) === 'undefined') {\n\t\t    this.adjacency[edge.source.id][edge.target.id] = [];\n\t    }\n\n\t    exists = false;\n\t    this.adjacency[edge.source.id][edge.target.id].forEach(function(e) {\n\t\t\t    if (edge.id === e.id) { exists = true; }\n\t    });\n\n\t    if (!exists) {\n\t\t    this.adjacency[edge.source.id][edge.target.id].push(edge);\n\t    }\n\n\t    this.notify();\n\t    return edge;\n    },\n    newNode: function(data) {\n\t    var node = new Node(this.nextNodeId++, data);\n\t    this.addNode(node);\n\t    return node;\n    },\n    newEdge: function(source, target, data) {\n\t    var edge = new Edge(this.nextEdgeId++, source, target, data);\n\t    this.addEdge(edge);\n\t    return edge;\n\t},\n\t// find the edges from node1 to node2\n    getEdges:function(node1, node2) {\n\t    if (typeof(this.adjacency[node1.id]) !== 'undefined'\n\t\t    && typeof(this.adjacency[node1.id][node2.id]) !== 'undefined') {\n\t\t    return this.adjacency[node1.id][node2.id];\n\t    }\n\t    return [];\n\t},\n\t// remove a node and it's associated edges from the graph\n    removeNode: function(node) {\n\t    if (typeof(this.nodeSet[node.id]) !== 'undefined') {\n\t\t    delete this.nodeSet[node.id];\n\t    }\n\n\t    for (var i = this.nodes.length - 1; i >= 0; i--) {\n\t\t    if (this.nodes[i].id === node.id) {\n\t\t\t    this.nodes.splice(i, 1);\n\t\t    }\n\t    }\n\t    this.detachNode(node);\n\t},\n\t// removes edges associated with a given node\n    detachNode:function(node) {\n\t    var tmpEdges = this.edges.slice();\n\t    tmpEdges.forEach(function(e) {\n\t\t    if (e.source.id === node.id || e.target.id === node.id) {\n\t\t\t    this.removeEdge(e);\n\t\t    }\n\t    }, this);\n\n\t    this.notify();\n\t},\n\t// remove a node and it's associated edges from the graph\n    removeEdge : function(edge) {\n\t    for (var i = this.edges.length - 1; i >= 0; i--) {\n\t\t    if (this.edges[i].id === edge.id) {\n\t\t\t    this.edges.splice(i, 1);\n\t\t    }\n\t    }\n\n\t    for (var x in this.adjacency) {\n\t\t    for (var y in this.adjacency[x]) {\n\t\t\t    var edges = this.adjacency[x][y];\n\n\t\t\t    for (var j=edges.length - 1; j>=0; j--) {\n\t\t\t\t    if (this.adjacency[x][y][j].id === edge.id) {\n\t\t\t\t\t    this.adjacency[x][y].splice(j, 1);\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    this.notify();\n    },\n    merge : function (data) {\n\n        /* Merge a list of nodes and edges into the current graph. eg.\n        var o = {\n\t        nodes: [\n\t\t        {id: 123, data: {type: 'user', userid: 123, displayname: 'aaa'}},\n\t\t        {id: 234, data: {type: 'user', userid: 234, displayname: 'bbb'}}\n\t        ],\n\t        edges: [\n\t\t        {from: 0, to: 1, type: 'submitted_design', directed: true, data: {weight: }}\n\t        ]\n        }\n        */\n\t    var nodes = [];\n\t    data.nodes.forEach(function(n) {\n\t\t    nodes.push(this.addNode(new Node(n.id, n.data)));\n\t    }, this);\n\n\t    data.edges.forEach(function(e) {\n\t\t    var from = nodes[e.from];\n\t\t    var to = nodes[e.to];\n\n\t\t    var id = (e.directed)\n\t\t\t    ? (id = e.type + \"-\" + from.id + \"-\" + to.id)\n\t\t\t    : (from.id < to.id) // normalise id for non-directed edges\n\t\t\t\t    ? e.type + \"-\" + from.id + \"-\" + to.id\n\t\t\t\t    : e.type + \"-\" + to.id + \"-\" + from.id;\n\n\t\t    var edge = this.addEdge(new Edge(id, from, to, e.data));\n\t\t    edge.data.type = e.type;\n\t    }, this);\n    },\n    filterNodes : function(fn) {\n\t    var tmpNodes = this.nodes.slice();\n\t    tmpNodes.forEach(function(n) {\n\t\t    if (!fn(n)) {\n\t\t\t    this.removeNode(n);\n\t\t    }\n\t    }, this);\n    },\n    filterEdges:function(fn) {\n\t    var tmpEdges = this.edges.slice();\n\t    tmpEdges.forEach(function(e) {\n\t\t    if (!fn(e)) {\n\t\t\t    this.removeEdge(e);\n\t\t    }\n\t    }, this);\n    },\n    addGraphListener :function(obj) {\n\t    this.eventListeners.push(obj);\n    },\n    notify :function() {\n\t    this.eventListeners.forEach(function(obj){\n\t\t    obj.graphChanged();\n\t    });\n    }\n\n}\n \n\n\n\n\n\n\n// -----------\nvar Layout = {};\n\nLayout.ForceDirected = function(graph, stiffness, repulsion, damping) {\n\tthis.graph = graph;\n\tthis.stiffness = stiffness; // spring stiffness constant\n\tthis.repulsion = repulsion; // repulsion constant\n\tthis.damping = damping; // velocity damping factor\n\n\tthis.nodePoints = {}; // keep track of points associated with nodes\n\tthis.edgeSprings = {}; // keep track of springs associated with edges\n};\n\n\n\n\n\n\n\nLayout.ForceDirected.prototype.point = function(node) {\n\tif (typeof(this.nodePoints[node.id]) === 'undefined') {\n\t\tvar mass = typeof(node.data.mass) !== 'undefined' ? node.data.mass : 1.0;\n\t\tthis.nodePoints[node.id] = new Layout.ForceDirected.Point(Vector.random(), mass);\n\t}\n\n\treturn this.nodePoints[node.id];\n};\n\nLayout.ForceDirected.prototype.spring = function(edge) {\n\tif (typeof(this.edgeSprings[edge.id]) === 'undefined') {\n\t\tvar length = typeof(edge.data.length) !== 'undefined' ? edge.data.length : 1.0;\n\n\t\tvar existingSpring = false;\n\n\t\tvar from = this.graph.getEdges(edge.source, edge.target);\n\t\tfrom.forEach(function(e) {\n\t\t\tif (existingSpring === false && typeof(this.edgeSprings[e.id]) !== 'undefined') {\n\t\t\t\texistingSpring = this.edgeSprings[e.id];\n\t\t\t}\n\t\t}, this);\n\n\t\tif (existingSpring !== false) {\n\t\t\treturn new Layout.ForceDirected.Spring(existingSpring.point1, existingSpring.point2, 0.0, 0.0);\n\t\t}\n\n\t\tvar to = this.graph.getEdges(edge.target, edge.source);\n\t\tfrom.forEach(function(e){\n\t\t\tif (existingSpring === false && typeof(this.edgeSprings[e.id]) !== 'undefined') {\n\t\t\t\texistingSpring = this.edgeSprings[e.id];\n\t\t\t}\n\t\t}, this);\n\n\t\tif (existingSpring !== false) {\n\t\t\treturn new Layout.ForceDirected.Spring(existingSpring.point2, existingSpring.point1, 0.0, 0.0);\n\t\t}\n\n\t\tthis.edgeSprings[edge.id] = new Layout.ForceDirected.Spring(\n\t\t\tthis.point(edge.source), this.point(edge.target), length, this.stiffness\n\t\t);\n\t}\n\n\treturn this.edgeSprings[edge.id];\n};\n\n// callback should accept two arguments: Node, Point\nLayout.ForceDirected.prototype.eachNode = function(callback) {\n\tvar t = this;\n\tthis.graph.nodes.forEach(function(n){\n\t\tcallback.call(t, n, t.point(n));\n\t});\n};\n\n// callback should accept two arguments: Edge, Spring\nLayout.ForceDirected.prototype.eachEdge = function(callback) {\n\tvar t = this;\n\tthis.graph.edges.forEach(function(e){\n\t\tcallback.call(t, e, t.spring(e));\n\t});\n};\n\n// callback should accept one argument: Spring\nLayout.ForceDirected.prototype.eachSpring = function(callback) {\n\tvar t = this;\n\tthis.graph.edges.forEach(function(e){\n\t\tcallback.call(t, t.spring(e));\n\t});\n};\n\n\n// Physics stuff\nLayout.ForceDirected.prototype.applyCoulombsLaw = function() {\n\tthis.eachNode(function(n1, point1) {\n\t\tthis.eachNode(function(n2, point2) {\n\t\t\tif (point1 !== point2)\n\t\t\t{\n\t\t\t\tvar d = point1.p.subtract(point2.p);\n\t\t\t\tvar distance = d.magnitude() + 0.1; // avoid massive forces at small distances (and divide by zero)\n\t\t\t\tvar direction = d.normalise();\n\n\t\t\t\t// apply force to each end point\n\t\t\t\tpoint1.applyForce(direction.multiply(this.repulsion).divide(distance * distance * 0.5));\n\t\t\t\tpoint2.applyForce(direction.multiply(this.repulsion).divide(distance * distance * -0.5));\n\t\t\t}\n\t\t});\n\t});\n};\n\nLayout.ForceDirected.prototype.applyHookesLaw = function() {\n\tthis.eachSpring(function(spring){\n\t\tvar d = spring.point2.p.subtract(spring.point1.p); // the direction of the spring\n\t\tvar displacement = spring.length - d.magnitude();\n\t\tvar direction = d.normalise();\n\n\t\t// apply force to each end point\n\t\tspring.point1.applyForce(direction.multiply(spring.k * displacement * -0.5));\n\t\tspring.point2.applyForce(direction.multiply(spring.k * displacement * 0.5));\n\t});\n};\n\nLayout.ForceDirected.prototype.attractToCentre = function() {\n\tthis.eachNode(function(node, point) {\n\t\tvar direction = point.p.multiply(-1.0);\n\t\tpoint.applyForce(direction.multiply(this.repulsion / 50.0));\n\t});\n};\n\n\nLayout.ForceDirected.prototype.updateVelocity = function(timestep) {\n\tthis.eachNode(function(node, point) {\n\t\t// Is this, along with updatePosition below, the only places that your\n\t\t// integration code exist?\n\t\tpoint.v = point.v.add(point.a.multiply(timestep)).multiply(this.damping);\n\t\tpoint.a = new Vector(0,0);\n\t});\n};\n\nLayout.ForceDirected.prototype.updatePosition = function(timestep) {\n\tthis.eachNode(function(node, point) {\n\t\t// Same question as above; along with updateVelocity, is this all of\n\t\t// your integration code?\n\t\tpoint.p = point.p.add(point.v.multiply(timestep));\n\t});\n};\n\n// Calculate the total kinetic energy of the system\nLayout.ForceDirected.prototype.totalEnergy = function(timestep) {\n\tvar energy = 0.0;\n\tthis.eachNode(function(node, point) {\n\t\tvar speed = point.v.magnitude();\n\t\tenergy += 0.5 * point.m * speed * speed;\n\t});\n\n\treturn energy;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; }; // stolen from coffeescript, thanks jashkenas! ;-)\n\nLayout.requestAnimationFrame = __bind(window.requestAnimationFrame ||\n\twindow.webkitRequestAnimationFrame ||\n\twindow.mozRequestAnimationFrame ||\n\twindow.oRequestAnimationFrame ||\n\twindow.msRequestAnimationFrame ||\n\tfunction(callback, element) {\n\t\twindow.setTimeout(callback, 10);\n\t}, window);\n\n\n// start simulation\nLayout.ForceDirected.prototype.start = function(interval, render, done) {\n\tvar t = this;\n\n\tif (this._started) return;\n\tthis._started = true;\n\n\tLayout.requestAnimationFrame(function step() {\n\t\tt.applyCoulombsLaw();\n\t\tt.applyHookesLaw();\n\t\tt.attractToCentre();\n\t\tt.updateVelocity(0.03);\n\t\tt.updatePosition(0.03);\n\n\t\tif (typeof(render) !== 'undefined')\n\t\t\trender();\n\n\t\t// stop simulation when energy of the system goes below a threshold\n\t\tif (t.totalEnergy() < 0.01) {\n\t\t\tt._started = false;\n\t\t\tif (typeof(done) !== 'undefined') { done(); }\n\t\t} else {\n            \n            Layout.requestAnimationFrame(step);\n\n\t\t}\n\t});\n};\n\n// Find the nearest point to a particular position\nLayout.ForceDirected.prototype.nearest = function (pos) {\n\n    var min = { node: null, point: null, distance: 1 };\n    var t = this;\n    this.graph.nodes.forEach(function (n) {\n        var point = t.point(n);\n        var distance = point.p.subtract(pos).magnitude();\n\n        if (min.distance === null || distance < min.distance) {\n            min = { node: n, point: point, distance: distance };\n        }\n    });\n\n  \n\n    return min;\n};\n\n// returns [bottomleft, topright]\nLayout.ForceDirected.prototype.getBoundingBox = function() {\n\tvar bottomleft = new Vector(-2,-2);\n\tvar topright = new Vector(2,2);\n\n\tthis.eachNode(function(n, point) {\n\t\tif (point.p.x < bottomleft.x) {\n\t\t\tbottomleft.x = point.p.x;\n\t\t}\n\t\tif (point.p.y < bottomleft.y) {\n\t\t\tbottomleft.y = point.p.y;\n\t\t}\n\t\tif (point.p.x > topright.x) {\n\t\t\ttopright.x = point.p.x;\n\t\t}\n\t\tif (point.p.y > topright.y) {\n\t\t\ttopright.y = point.p.y;\n\t\t}\n\t});\n\n\tvar padding = topright.subtract(bottomleft).multiply(0.07); // ~5% padding\n\n\treturn {bottomleft: bottomleft.subtract(padding), topright: topright.add(padding)};\n};\n\n\n\n\n// Vector\nVector = function(x, y) {\n\tthis.x = x;\n\tthis.y = y;\n};\n\nVector.random = function() {\n\treturn new Vector(10.0 * (Math.random() - 0.5), 10.0 * (Math.random() - 0.5));\n};\n\nVector.prototype.add = function(v2) {\n\treturn new Vector(this.x + v2.x, this.y + v2.y);\n};\n\nVector.prototype.subtract = function(v2) {\n\treturn new Vector(this.x - v2.x, this.y - v2.y);\n};\n\nVector.prototype.multiply = function(n) {\n\treturn new Vector(this.x * n, this.y * n);\n};\n\nVector.prototype.divide = function(n) {\n\treturn new Vector((this.x / n) || 0, (this.y / n) || 0); // Avoid divide by zero errors..\n};\n\nVector.prototype.magnitude = function() {\n\treturn Math.sqrt(this.x*this.x + this.y*this.y);\n};\n\nVector.prototype.normal = function() {\n\treturn new Vector(-this.y, this.x);\n};\n\nVector.prototype.normalise = function() {\n\treturn this.divide(this.magnitude());\n};\n\n\n\n\n\n\n\n// Point\nLayout.ForceDirected.Point = function(position, mass) {\n\tthis.p = position; // position\n\tthis.m = mass; // mass\n\tthis.v = new Vector(0, 0); // velocity\n\tthis.a = new Vector(0, 0); // acceleration\n};\n\nLayout.ForceDirected.Point.prototype.applyForce = function(force) {\n\tthis.a = this.a.add(force.divide(this.m));\n};\n\n// Spring\nLayout.ForceDirected.Spring = function(point1, point2, length, k) {\n\tthis.point1 = point1;\n\tthis.point2 = point2;\n\tthis.length = length; // spring length at rest\n\tthis.k = k; // spring constant (See Hooke's law) .. how stiff the spring is\n};\n\n\n\n\n\n\n\n\n\n// Layout.ForceDirected.Spring.prototype.distanceToPoint = function(point)\n// {\n// \t// hardcore vector arithmetic.. ohh yeah!\n// \t// .. see http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment/865080#865080\n// \tvar n = this.point2.p.subtract(this.point1.p).normalise().normal();\n// \tvar ac = point.p.subtract(this.point1.p);\n// \treturn Math.abs(ac.x * n.x + ac.y * n.y);\n// };\n\n// Renderer handles the layout rendering loop\nfunction Renderer(interval, layout, clear, drawEdge, drawNode) {\n\tthis.interval = interval;\n\tthis.layout = layout;\n\tthis.clear = clear;\n\tthis.drawEdge = drawEdge;\n\tthis.drawNode = drawNode;\n\n\tthis.layout.graph.addGraphListener(this);\n}\n\nRenderer.prototype.graphChanged = function(e) {\n\tthis.start();\n};\n\nRenderer.prototype.start = function() {\n\tvar t = this;\n\tthis.layout.start(1, function render() {\n\t\tt.clear();\n\n\t\tt.layout.eachEdge(function(edge, spring) {\n\t\t\tt.drawEdge(edge, spring.point1.p, spring.point2.p);\n\t\t});\n\n\t\tt.layout.eachNode(function(node, point) {\n\t\t\tt.drawNode(node, point.p);\n\t\t});\n\t});\n};\n\n"]],"start1":0,"start2":0,"length1":0,"length2":16208}]],"length":16208}
{"contributors":[],"silentsave":false,"ts":1360762274256,"patch":[[{"diffs":[[0,"});\n};\n\n"],[-1,"\n"],[0,"// Physi"]],"start1":9285,"start2":9285,"length1":17,"length2":16},{"diffs":[[0,"\n};\n\n\n\n\n"],[-1,"\n\n\n\n\n\n\n\n\n\n"],[0,"var __bi"]],"start1":11459,"start2":11459,"length1":26,"length2":16},{"diffs":[[0,"\n\n\n\n"],[-1,"\n\n\n// Layout.ForceDirected.Spring.prototype.distanceToPoint = function(point)\n// {\n// \t// hardcore vector arithmetic.. ohh yeah!\n// \t// .. see http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment/865080#865080\n// \tvar n = this.point2.p.subtract(this.point1.p).normalise().normal();\n// \tvar ac = point.p.subtract(this.point1.p);\n// \treturn Math.abs(ac.x * n.x + ac.y * n.y);\n// };\n\n// Renderer handles the layout rendering loop\nfunction Renderer(interval, layout, clear, drawEdge, drawNode) {\n\tthis.interval = interval;\n\tthis.layout = layout;\n\tthis.clear = clear;\n\tthis.drawEdge = drawEdge;\n\tthis.drawNode = drawNode;\n\n\tthis.layout.graph.addGraphListener(this);\n}\n\nRenderer.prototype.graphChanged = function(e) {\n\tthis.start();\n};\n\nRenderer.prototype.start = function() {\n\tvar t = this;\n\tthis.layout.start(1, function render() {\n\t\tt.clear();\n\n\t\tt.layout.eachEdge(function(edge, spring) {\n\t\t\tt.drawEdge(edge, spring.point1.p, spring.point2.p);\n\t\t});\n\n\t\tt.layout.eachNode(function(node, point) {\n\t\t\tt.drawNode(node, point.p);\n\t\t});\n\t});\n};"],[1,"    var mapHandler = function(currentBB, graph){\n        \n        //this.graph =graph;\n        this.currentBB = currentBB;\n        \n        // graph size \n        this.graph_width = 2000;\n        this.graph_height = 2000;\n\n        //display size\n        this.display_width = window.innerWidth + 500;\n        this.display_height = window.innerHeight + 500;\n\n        //save screen width/height\n        this.screenHeight = screen.height;\n        this.screenWidth = screen.width;\n\n        //positional controls\n        this.centrePoint = 0;\n        this.centreVerticalPoint = 0;\n        this.zoomOffset = 0;\n\n        this.centrePointXOffset = 0.0;\n        this.centrePointYOffset = 0.0;\n\n        this.mouse_x = 0;\n        this.mouse_y = 0;\n\n        // queue of points to move graph to \n        this.mouseQueue = [];\n\n        this.mouseXPercLocat = 0.0;\n        this.mouseYPercLocat = 0.0;\n\n        this.percX1 = 0.0;\n        this.percY1 = 0.0; \n\n    }\n\n\n    mapHandler.prototype = {\n        \n        SetCentrePoint:function (param_x, param_y) {\n            if (param_x == 1000000 && param_y == 1000000) {\n                this.centrePointXOffset = 0;\n                this.centrePointYOffset = 0;\n            }\n            else {\n                if (this.centrePointXOffset === 0) {\n                    this.centrePointXOffset = this.centrePoint - param_x;\n                }\n                else {\n\n                    this.centrePoint = param_x + this.centrePointXOffset;\n                }\n                if (this.centrePointYOffset === 0) {\n                    this.centrePointYOffset = this.centreVerticalPoint - param_y;\n                }\n                else {\n\n                    this.centreVerticalPoint = param_y + this.centrePointYOffset;\n                }\n            }\n        },\n        SetZoomStart: function () {\n            this.GetPercDistances();\n            this.mouseXPercLocat = this.percX1;\n            this.mouseYPercLocat = this.percY1;\n        },\n        GetPercDistances: function () {\n\n\n            var _distanceFromX1 = 0.0;\n            var _distanceFromY1 = 0.0;\n            var _onePercentDistance = 0.0;\n\n            this.percX1 = 0.0;\n            this.percY1 = 0.0;\n\n\n\n            //   this.drawingWidth = this.drawingX2 - this.drawingX1;\n            //  this.drawingHeight = this.drawingY2 - this.drawingY1;\n\n\n\n            if (this.graph_width !== 0 && this.graph_height !== 0) {\n                if (this.centrePoint > 0) {\n                    _distanceFromX1 = this.mouse_x - this.centrePoint; //;\n                }\n                else {\n                    _distanceFromX1 = Math.abs(this.centrePoint) + this.mouse_x;\n                }\n\n                _onePercentDistance = this.graph_width / 100;\n                this.percX1 = _distanceFromX1 / _onePercentDistance;\n\n                if (this.centreVerticalPoint > 0) {\n                    _distanceFromY1 = this.mouse_y - this.centreVerticalPoint; // ;                \n                }\n                else {\n                    _distanceFromY1 = Math.abs(this.centreVerticalPoint) + this.mouse_y;\n                }\n\n                _onePercentDistance = this.graph_height / 100;\n                this.percY1 = _distanceFromY1 / _onePercentDistance;\n\n            }\n\n\n        },\n        UpdatePosition:function(_dir){\n            \n            var increment = 2;\n            \n            if (_dir == 'SOUTH') {\n                this.centreVerticalPoint -= increment;\n            }\n            if (_dir == 'NORTH') {\n                this.centreVerticalPoint += increment;\n            }\n            if (_dir == 'EAST') {\n                this.centrePoint += increment;\n            }\n            if (_dir == 'WEST') {\n\n                this.centrePoint -= increment;\n            }\n            if (_dir == 'UP' || _dir == 'DOWN') {\n\n                this.mouse_x = this.screenWidth / 2;\n                this.mouse_y = this.screenHeight / 2;\n\n                this.GetPercDistances();\n\n                this.mouseXPercLocat = this.percX1;\n                this.mouseYPercLocat = this.percY1;\n\n                // zero the centre point \n                this.SetCentrePoint(1000000, 1000000);\n\n                if (_dir == 'UP') {\n                    this.graph_width += 50;\n                    this.graph_height += 50;\n                } else {\n                    this.graph_width -= 50;\n                    this.graph_height -= 50;\n                }\n\n                this.GetPercDistances();\n\n\n                //console.log('y zoom ' + percY1 + ' ' + mouseYPercLocat);\n                this.centreVerticalPoint += (this.graph_height / 100) * (this.percY1 - this.mouseYPercLocat);\n                //console.log('x zoom ' + percX1 + ' ' + mouseXPercLocat);\n\n                this.centrePoint += (this.graph_width / 100) * (this.percX1 - this.mouseXPercLocat);\n            }\n\n        },\n        \n       \n        \n        currentPositionFromScreen:function(pos,e){\n            \n             var utils = new Utils();\n            \n            \n            \n             var p = utils.fromScreen({ x: (e.pageX - this.centrePoint) - pos.left, y: (e.pageY - this.centreVerticalPoint) - pos.top });            \n             return p;\n        },\n        currentPositionToScreen:function(pos,e){\n             var utils = new Utils();\n             \n             var p = utils.toScreen({ x: (e.pageX - this.centrePoint) - pos.left, y: (e.pageY - this.centreVerticalPoint) - pos.top });            \n             return p;\n        },\n        \n        addToMouseQueue: function(x,y){            \n            var _point = new Array(x, y);\n            this.mouseQueue[this.mouseQueue.length] = _point;            \n        }\n       \n\n        \n \n\n    };\n\n\n\n\n// Layout.ForceDirected.Spring.prototype.distanceToPoint = function(point)\n// {\n// \t// hardcore vector arithmetic.. ohh yeah!\n// \t// .. see http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment/865080#865080\n// \tvar n = this.point2.p.subtract(this.point1.p).normalise().normal();\n// \tvar ac = point.p.subtract(this.point1.p);\n// \treturn Math.abs(ac.x * n.x + ac.y * n.y);\n// };\n\n// Renderer handles the layout rendering loop\nfunction Renderer(interval, layout, clear, drawEdge, drawNode) {\n\tthis.interval = interval;\n\tthis.layout = layout;\n\tthis.clear = clear;\n\tthis.drawEdge = drawEdge;\n\tthis.drawNode = drawNode;\n\n\tthis.layout.graph.addGraphListener(this);\n}\n\nRenderer.prototype.graphChanged = function(e) {\n\tthis.start();\n};\n\nRenderer.prototype.start = function() {\n\tvar t = this;\n\tthis.layout.start(1, function render() {\n\t\tt.clear();\n\n\t\tt.layout.eachEdge(function(edge, spring) {\n\t\t\tt.drawEdge(edge, spring.point1.p, spring.point2.p);\n\t\t});\n\n\t\tt.layout.eachNode(function(node, point) {\n\t\t\tt.drawNode(node, point.p);\n\t\t});\n\t});\n};\n\n\nfunction Utils(currentBB){\n    this.currentBB = currentBB;    \n}\n\nUtils.prototype = {\n    \n        toScreen:function (p) {\n            var size = this.currentBB.topright.subtract(this.currentBB.bottomleft);\n            var sx = p.subtract(this.currentBB.bottomleft).divide(size.x).x * this.graph_width;\n            var sy = p.subtract(this.currentBB.bottomleft).divide(size.y).y * this.graph_height;\n            return new Vector(sx, sy);\n        },\n\n        fromScreen:function (s) {\n            var size = this.currentBB.topright.subtract(this.currentBB.bottomleft);\n            var px = (s.x / this.graph_width) * size.x + this.currentBB.bottomleft.x;\n            var py = (s.y / this.graph_height) * size.y + this.currentBB.bottomleft.y;\n            return new Vector(px, py);\n        },\n        intersect_line_line: function(p1, p2, p3, p4) {\n            var denom = ((p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y));\n\n            // lines are parallel\n            if (denom === 0) {\n                return false;\n            }\n\n            var ua = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\n            var ub = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\n\n            if (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n                return false;\n            }\n\n            return new Vector(p1.x + ua * (p2.x - p1.x), p1.y + ua * (p2.y - p1.y));\n        },\n\n        intersect_line_box: function(p1, p2, p3, w, h) {\n            var tl = { x: p3.x, y: p3.y };\n            var tr = { x: p3.x + w, y: p3.y };\n            var bl = { x: p3.x, y: p3.y + h };\n            var br = { x: p3.x + w, y: p3.y + h };\n\n            var result;\n            if (result = this.intersect_line_line(p1, p2, tl, tr)) { return result; } // top\n            if (result = this.intersect_line_line(p1, p2, tr, br)) { return result; } // right\n            if (result = this.intersect_line_line(p1, p2, br, bl)) { return result; } // bottom\n            if (result = this.intersect_line_line(p1, p2, bl, tl)) { return result; } // left\n\n            return false;\n        }\n    \n}\n\n\n\n\n"],[0,"\n\n"]],"start1":15113,"start2":15113,"length1":1084,"length2":8917}]],"length":24030,"saved":false}
{"ts":1360762355107,"patch":[[{"diffs":[[0,"function(pos,e){"],[-1,"\n"],[0,"            \n   "]],"start1":20026,"start2":20026,"length1":33,"length2":32},{"diffs":[[0,"ils("],[-1,");\n            \n            \n"],[1,"this.currentBB);    "],[0,"    "]],"start1":20086,"start2":20086,"length1":37,"length2":28},{"diffs":[[0,"w Utils("],[1,"this.currentBB"],[0,");"],[-1,"\n"],[0,"        "]],"start1":20383,"start2":20383,"length1":19,"length2":32}]],"length":24033,"saved":false}
{"ts":1360762583240,"patch":[[{"diffs":[[0,"awNode;\n"],[1,"    this.mapHandler = mapHandler;\n    "],[0,"\n\tthis.l"]],"start1":21470,"start2":21470,"length1":16,"length2":54}]],"length":24071,"saved":false}
{"ts":1360762600478,"patch":[[{"diffs":[[0,"nterval,"],[1,"mapHandler,"],[0," layout,"]],"start1":21307,"start2":21307,"length1":16,"length2":27}]],"length":24082,"saved":false}
{"ts":1360763654891,"patch":[[{"diffs":[[0,"      \n        }"],[1,","],[0,"\n       \n\n      "]],"start1":20773,"start2":20773,"length1":32,"length2":33},{"diffs":[[0,"       \n"],[1,"        validToDraw:function(x1,y1){\n            \n            var validDraw =true;\n            \n            if ( x1 > this.display_width) validDraw = false;\n    \t    if ( x1 < -500) validDraw = false;\n            if ( y1 > this.display_height) validDraw = false;\n            if ( y1 < -500) validDraw = false;\n            \n            return validDraw;    \n        }"],[0,"\n       "]],"start1":20791,"start2":20791,"length1":16,"length2":382}]],"length":24449,"saved":false}
{"ts":1360764046869,"patch":[[{"diffs":[[0,"w;    \n        }"],[1,","],[0,"\n        \n \n\n   "]],"start1":21149,"start2":21149,"length1":32,"length2":33},{"diffs":[[0,"        "],[1,"mapOffset:function(v1){\n            \n            v1.x += this.centrePoint;\n\t\t    v1.y += this.centreVerticalPoint;\n            \n            return v1;\n        }"],[0,"\n \n\n    "]],"start1":21167,"start2":21167,"length1":16,"length2":176}]],"length":24610,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360849457480,"patch":[[{"diffs":[[0,"nction (node) {\n"],[-1,"\t"],[1,"    "],[0,"    if (typeof(t"]],"start1":2374,"start2":2374,"length1":33,"length2":36},{"diffs":[[0," 'undefined') {\n"],[-1,"\t\t"],[1,"        "],[0,"    this.nodes.p"]],"start1":2435,"start2":2435,"length1":34,"length2":40},{"diffs":[[0,"push(node);\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    this.nod"]],"start1":2474,"start2":2474,"length1":33,"length2":47},{"diffs":[[0,"= node;\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    this"]],"start1":2535,"start2":2535,"length1":18,"length2":29},{"diffs":[[0," this.notify();\n"],[-1,"\t"],[1,"    "],[0,"    return node;"]],"start1":2559,"start2":2559,"length1":33,"length2":36},{"diffs":[[0,"     },\n"],[1,"\n"],[0,"        "],[-1,"\n       "],[1,"zoomCurrentBB: function (targetBB, amount) {\n\n            this.currentBB = {\n                bottomleft: this.currentBB.bottomleft.add(targetBB.bottomleft.subtract(this.currentBB.bottomleft)\n    \t\t\t.divide(amount)),\n                topright: this.currentBB.topright.add(targetBB.topright.subtract(this.currentBB.topright)\n\t\t\t\t.divide(amount))\n            };\n\n\n        },"],[0,"\n       "]],"start1":19995,"start2":19995,"length1":32,"length2":395},{"diffs":[[0,"(pos,e){"],[-1,"            "],[0,"\n       "]],"start1":20434,"start2":20434,"length1":28,"length2":16},{"diffs":[[0,"e){\n            "],[-1," "],[0,"var utils = new "]],"start1":20439,"start2":20439,"length1":33,"length2":32},{"diffs":[[0,"s(this.currentBB"],[1,", this.graph_width, this.graph_height"],[0,");              "]],"start1":20475,"start2":20475,"length1":32,"length2":69},{"diffs":[[0,"e){\n            "],[-1," "],[0,"var utils = new "]],"start1":20776,"start2":20776,"length1":33,"length2":32},{"diffs":[[0,"urrentBB"],[1,", this.graph_width, this.graph_height"],[0,");      "]],"start1":20820,"start2":20820,"length1":16,"length2":53},{"diffs":[[0,"this.map"],[-1,"Handler"],[0," = mapHa"]],"start1":22481,"start2":22481,"length1":23,"length2":16},{"diffs":[[0,"urrentBB"],[1,", gwidth,hwidth"],[0,"){\n    t"]],"start1":22946,"start2":22946,"length1":16,"length2":31},{"diffs":[[0,"rrentBB;"],[1,"\n"],[0,"    "],[1,"this.graph_width = gwidth;\n    this.graph_height = hwidth;"],[0,"\n}\n\nUtil"]],"start1":22995,"start2":22995,"length1":20,"length2":79}]],"length":25137,"saved":false}
{"ts":1360849520390,"patch":[[{"diffs":[[0,"ion(edge) {\n"],[-1,"\t"],[1,"    "],[0,"    var exis"]],"start1":2620,"start2":2620,"length1":25,"length2":28},{"diffs":[[0,"exists = false;\n"],[-1,"\t"],[1,"    "],[0,"    this.edges.f"]],"start1":2644,"start2":2644,"length1":33,"length2":36},{"diffs":[[0,"h(function(e) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if (edge.id "]],"start1":2685,"start2":2685,"length1":34,"length2":40},{"diffs":[[0,"s = true; }\n"],[-1,"\t"],[1,"    "],[0,"    });\n"],[-1,"\n\t"],[1,"        \n   "],[0,"    "],[1," "],[0,"if (!exists)"]],"start1":2742,"start2":2742,"length1":39,"length2":53},{"diffs":[[0," if (!exists) {\n"],[-1,"\t\t"],[1,"        "],[0,"    this.edges.p"]],"start1":2782,"start2":2782,"length1":34,"length2":40},{"diffs":[[0,"push(edge);\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    if (type"]],"start1":2821,"start2":2821,"length1":33,"length2":47},{"diffs":[[0," 'undefined') {\n"],[-1,"\t\t"],[1,"     "],[0,"    "],[1,"   "],[0,"this.adjacency[e"]],"start1":2906,"start2":2906,"length1":38,"length2":44},{"diffs":[[0,"] = {};\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\t"],[1,"   "],[0,"    "],[1," "],[0,"if (type"]],"start1":2963,"start2":2963,"length1":28,"length2":34},{"diffs":[[0,"defined') {\n"],[-1,"\t\t"],[1,"        "],[0,"    this.adj"]],"start1":3055,"start2":3055,"length1":26,"length2":32},{"diffs":[[0,"] = [];\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    exis"]],"start1":3124,"start2":3124,"length1":25,"length2":39},{"diffs":[[0," false;\n"],[-1,"\t"],[1,"    "],[0,"    this"]],"start1":3167,"start2":3167,"length1":17,"length2":20},{"diffs":[[0,"nction(e) {\n"],[-1,"\t\t\t"],[1,"        "],[0,"    if (edge"]],"start1":3240,"start2":3240,"length1":27,"length2":32},{"diffs":[[0,"; }\n"],[-1,"\t"],[1,"    "],[0,"    });\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    "]],"start1":3301,"start2":3301,"length1":19,"length2":33},{"diffs":[[0,"(!exists) {\n"],[-1,"\t\t"],[1,"        "],[0,"    this.adj"]],"start1":3337,"start2":3337,"length1":26,"length2":32},{"diffs":[[0,"(edge);\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    this"]],"start1":3412,"start2":3412,"length1":25,"length2":39},{"diffs":[[0,"s.notify();\n"],[-1,"\t"],[1,"    "],[0,"    return e"]],"start1":3450,"start2":3450,"length1":25,"length2":28},{"diffs":[[0,"unction(data) {\n"],[-1,"\t"],[1,"    "],[0,"    var node = n"]],"start1":3504,"start2":3504,"length1":33,"length2":36},{"diffs":[[0,"odeId++, data);\n"],[-1,"\t"],[1,"    "],[0,"    this.addNode"]],"start1":3558,"start2":3558,"length1":33,"length2":36},{"diffs":[[0,"Node(node);\n"],[-1,"\t"],[1,"    "],[0,"    return n"]],"start1":3590,"start2":3590,"length1":25,"length2":28},{"diffs":[[0,"et, data) {\n"],[-1,"\t"],[1,"    "],[0,"    var edge"]],"start1":3664,"start2":3664,"length1":25,"length2":28},{"diffs":[[0," data);\n"],[-1,"\t"],[1,"    "],[0,"    this"]],"start1":3738,"start2":3738,"length1":17,"length2":20},{"diffs":[[0,"(edge);\n"],[-1,"\t"],[1,"    "],[0,"    retu"]],"start1":3766,"start2":3766,"length1":17,"length2":20},{"diffs":[[0,"1, node2) {\n"],[-1,"\t"],[1,"    "],[0,"    if (type"]],"start1":3864,"start2":3864,"length1":25,"length2":28},{"diffs":[[0,"efined'\n"],[-1,"\t\t"],[1,"        "],[0,"    && t"]],"start1":3929,"start2":3929,"length1":18,"length2":24},{"diffs":[[0,"defined') {\n"],[-1,"\t\t"],[1,"        "],[0,"    return t"]],"start1":4002,"start2":4002,"length1":26,"length2":32},{"diffs":[[0,"e2.id];\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\t"],[1,"    "],[0,"    retu"]],"start1":4061,"start2":4061,"length1":24,"length2":30},{"diffs":[[0,"ion(node) {\n"],[-1,"\t"],[1,"    "],[0,"    if (type"]],"start1":4182,"start2":4182,"length1":25,"length2":28},{"diffs":[[0,"defined') {\n"],[-1,"\t\t"],[1,"        "],[0,"    delete t"]],"start1":4243,"start2":4243,"length1":26,"length2":32},{"diffs":[[0,"de.id];\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    for "]],"start1":4289,"start2":4289,"length1":25,"length2":39},{"diffs":[[0," i >= 0; i--) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if (this.nod"]],"start1":4359,"start2":4359,"length1":34,"length2":40},{"diffs":[[0," === node.id) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"    this.nodes.s"]],"start1":4407,"start2":4407,"length1":35,"length2":44},{"diffs":[[0,"1);\n"],[-1,"\t\t"],[1,"        "],[0,"    }\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\t"],[1,"    "],[0,"    "]],"start1":4460,"start2":4460,"length1":24,"length2":36},{"diffs":[[0,"ion(node) {\n"],[-1,"\t"],[1,"    "],[0,"    var tmpE"]],"start1":4590,"start2":4590,"length1":25,"length2":28},{"diffs":[[0,".edges.slice();\n"],[-1,"\t"],[1,"    "],[0,"    tmpEdges.for"]],"start1":4629,"start2":4629,"length1":33,"length2":36},{"diffs":[[0,"h(function(e) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if (e.source"]],"start1":4668,"start2":4668,"length1":34,"length2":40},{"diffs":[[0," === node.id) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"    this.removeE"]],"start1":4738,"start2":4738,"length1":35,"length2":44},{"diffs":[[0,"oveEdge(e);\n"],[-1,"\t\t"],[1,"        "],[0,"    }\n"],[-1,"\t"],[1,"    "],[0,"    }, this)"]],"start1":4778,"start2":4778,"length1":33,"length2":42},{"diffs":[[0,"  }, this);\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    this.not"]],"start1":4810,"start2":4810,"length1":26,"length2":37}]],"length":25390,"saved":false}
{"ts":1360849552023,"patch":[[{"diffs":[[0,"ion(edge) {\n"],[-1,"\t"],[1,"    "],[0,"    for (var"]],"start1":4939,"start2":4939,"length1":25,"length2":28},{"diffs":[[0,"= 0; i--) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if (this"]],"start1":4998,"start2":4998,"length1":26,"length2":32},{"diffs":[[0," edge.id) {\n"],[-1,"\t\t\t"],[1,"         "],[0,"    "],[1,"   "],[0,"this.edges.s"]],"start1":5046,"start2":5046,"length1":31,"length2":40},{"diffs":[[0,"(i, 1);\n"],[-1,"\t\t"],[1,"        "],[0,"    }\n"],[-1,"\t"],[1,"    "],[0,"    }\n"],[-1,"\n\t"],[1,"        \n    "],[0,"    for "]],"start1":5091,"start2":5091,"length1":33,"length2":53},{"diffs":[[0,"djacency) {\n"],[-1,"\t\t"],[1,"        "],[0,"    for (var"]],"start1":5160,"start2":5160,"length1":26,"length2":32},{"diffs":[[0,"cency[x]) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"    var edge"]],"start1":5207,"start2":5207,"length1":27,"length2":36},{"diffs":[[0,"[x][y];\n"],[-1,"\n\t\t\t"],[1,"                \n            "],[0,"    for "]],"start1":5261,"start2":5261,"length1":20,"length2":45},{"diffs":[[0," j--) {\n"],[-1,"\t\t\t\t"],[1,"                "],[0,"    if ("]],"start1":5336,"start2":5336,"length1":20,"length2":32},{"diffs":[[0,") {\n"],[-1,"\t\t\t\t\t"],[1,"                    "],[0,"    "]],"start1":5406,"start2":5406,"length1":13,"length2":28},{"diffs":[[0,"1);\n"],[-1,"\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t"],[1,"                    }\n                }\n            }\n    "],[0,"    }\n\n"],[-1,"\t"],[1,"    "],[0,"    "]],"start1":5465,"start2":5465,"length1":44,"length2":77}]],"length":25528,"saved":false}
{"ts":1360849605197,"patch":[[{"diffs":[[0,"r o = {\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":5676,"start2":5676,"length1":17,"length2":20},{"diffs":[[0,"   nodes: [\n"],[-1,"\t\t"],[1,"        "],[0,"        {id:"]],"start1":5693,"start2":5693,"length1":26,"length2":32},{"diffs":[[0,"aaa'}},\n"],[-1,"\t\t"],[1,"        "],[0,"        "]],"start1":5779,"start2":5779,"length1":18,"length2":24},{"diffs":[[0,"'bbb'}}\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":5860,"start2":5860,"length1":17,"length2":20},{"diffs":[[0,"     ],\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":5875,"start2":5875,"length1":17,"length2":20},{"diffs":[[0,"dges: [\n"],[-1,"\t\t"],[1,"        "],[0,"        "]],"start1":5896,"start2":5896,"length1":18,"length2":24},{"diffs":[[0,"ght: }}\n"],[-1,"\t"],[1,"    "],[0,"        "]],"start1":5989,"start2":5989,"length1":17,"length2":20},{"diffs":[[0,"     */\n"],[-1,"\t"],[1,"    "],[0,"    var "]],"start1":6024,"start2":6024,"length1":17,"length2":20},{"diffs":[[0,"s = [];\n"],[-1,"\t"],[1,"        "],[0,"    data"]],"start1":6048,"start2":6048,"length1":17,"length2":24},{"diffs":[[0,"nction(n) {\n"],[-1,"\t\t"],[1,"        "],[0,"    nodes.pu"]],"start1":6089,"start2":6089,"length1":26,"length2":32},{"diffs":[[0,"ata)));\n"],[-1,"\t"],[1,"    "],[0,"    }, t"]],"start1":6155,"start2":6155,"length1":17,"length2":20},{"diffs":[[0,"this);\n\n"],[-1,"\t"],[1,"    "],[0,"    data"]],"start1":6174,"start2":6174,"length1":17,"length2":20},{"diffs":[[0,"on(e) {\n"],[-1,"\t\t"],[1,"      "],[0,"    "],[1,"  "],[0,"var from"]],"start1":6215,"start2":6215,"length1":22,"length2":28},{"diffs":[[0,".from];\n"],[-1,"\t\t"],[1,"        "],[0,"    var "]],"start1":6253,"start2":6253,"length1":18,"length2":24},{"diffs":[[0,"[e.to];\n"],[-1,"\n\t\t"],[1,"            \n        "],[0,"    var "]],"start1":6287,"start2":6287,"length1":19,"length2":37},{"diffs":[[0,"rected)\n"],[-1,"\t\t\t"],[1,"        "],[0,"    ? (i"]],"start1":6334,"start2":6334,"length1":19,"length2":24},{"diffs":[[0," to.id)\n"],[-1,"\t\t\t"],[1,"        "],[0,"    : (f"]],"start1":6392,"start2":6392,"length1":19,"length2":24},{"diffs":[[0,"d edges\n"],[-1,"\t\t\t\t"],[1,"     "],[0,"    "],[1,"   "],[0,"? e.type"]],"start1":6463,"start2":6463,"length1":24,"length2":28},{"diffs":[[0,".id\n"],[-1,"\t\t\t\t"],[1,"      "],[0,"    "],[1,"  "],[0,": e."]],"start1":6518,"start2":6518,"length1":16,"length2":20},{"diffs":[[0,"rom.id;\n"],[-1,"\n\t\t"],[1,"            \n        "],[0,"    var "]],"start1":6566,"start2":6566,"length1":19,"length2":37},{"diffs":[[0,"data));\n"],[-1,"\t\t"],[1,"        "],[0,"    edge"]],"start1":6648,"start2":6648,"length1":18,"length2":24},{"diffs":[[0,"e.type;\n"],[-1,"\t"],[1,"    "],[0,"    }, t"]],"start1":6685,"start2":6685,"length1":17,"length2":20}]],"length":25655,"saved":false}
{"ts":1360849645726,"patch":[[{"diffs":[[0," function(fn) {\n"],[-1,"\t"],[1,"    "],[0,"    var tmpNodes"]],"start1":6735,"start2":6735,"length1":33,"length2":36},{"diffs":[[0,"es.slice();\n"],[-1,"\t"],[1,"    "],[0,"    tmpNodes"]],"start1":6782,"start2":6782,"length1":25,"length2":28},{"diffs":[[0,"nction(n) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if (!fn("]],"start1":6821,"start2":6821,"length1":26,"length2":32},{"diffs":[[0," (!fn(n)) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"    this.rem"]],"start1":6847,"start2":6847,"length1":27,"length2":36},{"diffs":[[0,"ode(n);\n"],[-1,"\t\t    }\n\t"],[1,"            }\n   "],[0,"    "],[1," "],[0,"}, this)"]],"start1":6887,"start2":6887,"length1":29,"length2":38},{"diffs":[[0,"ction(fn) {\n"],[-1,"\t"],[1,"    "],[0,"    var tmpE"]],"start1":6953,"start2":6953,"length1":25,"length2":28},{"diffs":[[0,"es.slice();\n"],[-1,"\t"],[1,"        "],[0,"    tmpEdges"]],"start1":6996,"start2":6996,"length1":25,"length2":32},{"diffs":[[0,"on(e) {\n"],[-1,"\t\t"],[1,"        "],[0,"    if ("]],"start1":7043,"start2":7043,"length1":18,"length2":24},{"diffs":[[0,"n(e)) {\n"],[-1,"\t\t\t"],[1,"            "],[0,"    this"]],"start1":7069,"start2":7069,"length1":19,"length2":28},{"diffs":[[0,"e);\n"],[-1,"\t\t    }\n\t"],[1,"            }\n    "],[0,"    "]],"start1":7109,"start2":7109,"length1":17,"length2":26},{"diffs":[[0,"tion(obj) {\n"],[-1,"\t"],[1,"    "],[0,"    this.eve"]],"start1":7178,"start2":7178,"length1":25,"length2":28},{"diffs":[[0,"ion() {\n"],[-1,"\t"],[1,"   "],[0,"    "],[1," "],[0,"this.eve"]],"start1":7253,"start2":7253,"length1":21,"length2":24},{"diffs":[[0,"n(obj){\n"],[-1,"\t\t"],[1,"        "],[0,"    obj."]],"start1":7304,"start2":7304,"length1":18,"length2":24},{"diffs":[[0,"nged();\n"],[-1,"\t"],[1,"    "],[0,"    });\n"]],"start1":7336,"start2":7336,"length1":17,"length2":20}]],"length":25734,"saved":false}
{"ts":1360849677246,"patch":[[{"diffs":[[0,"    }\n\n}"],[1,";"],[0,"\n \n\n\n\n\n\n"]],"start1":7356,"start2":7356,"length1":16,"length2":17}]],"length":25735,"saved":false}
{"ts":1360850288072,"patch":[[{"diffs":[[0,"0.0; \n\n    }"],[1,";"],[0,"\n\n\n    mapHa"]],"start1":16687,"start2":16687,"length1":24,"length2":25}]],"length":25736,"saved":false}
{"ts":1360850315584,"patch":[[{"diffs":[[0,"E.\n */\n\n"],[1,"var Vector;\n\n"],[0,"//https:"]],"start1":1142,"start2":1142,"length1":16,"length2":29}]],"length":25749,"saved":false}
{"contributors":[],"silentsave":false,"ts":1360850496662,"patch":[[{"diffs":[[0," this =="],[1,"="],[0," null ) "]],"start1":1364,"start2":1364,"length1":16,"length2":17}]],"length":25750,"saved":false}
{"ts":1360850730513,"patch":[[{"diffs":[[0,"ges\n};\n\n"],[-1,"\n\n\n\n\n\n"],[0,"Layout.F"]],"start1":7812,"start2":7812,"length1":22,"length2":16},{"diffs":[[0,"type"],[-1,"."],[1," = {\n    "],[0,"point"],[-1," ="],[1,":"],[0," fun"]],"start1":7846,"start2":7846,"length1":16,"length2":23},{"diffs":[[0,"ion(node) {\n"],[-1,"\t"],[1,"        "],[0,"if (typeof(t"]],"start1":7871,"start2":7871,"length1":25,"length2":32},{"diffs":[[0,"defined') {\n"],[-1,"\t\t"],[1,"            "],[0,"var mass = t"]],"start1":7935,"start2":7935,"length1":26,"length2":36},{"diffs":[[0," : 1.0;\n"],[-1,"\t\t"],[1,"            "],[0,"this.nod"]],"start1":8025,"start2":8025,"length1":18,"length2":28},{"diffs":[[0," mass);\n"],[-1,"\t}\n\n\t"],[1,"        }\n        \n        "],[0,"return t"]],"start1":8119,"start2":8119,"length1":21,"length2":43},{"diffs":[[0,"d];\n"],[-1,"};\n\nLayout.ForceDirected.prototype."],[1,"    },\n\n    "],[0,"spring"],[-1," = "],[1,":"],[0,"func"]],"start1":8183,"start2":8183,"length1":52,"length2":27},{"diffs":[[0,"edge) {\n"],[-1,"\t"],[1,"        "],[0,"if (type"]],"start1":8215,"start2":8215,"length1":17,"length2":24},{"diffs":[[0,"defined') {\n"],[-1,"\t\t"],[1,"            "],[0,"var length ="]],"start1":8276,"start2":8276,"length1":26,"length2":36},{"diffs":[[0," : 1.0;\n"],[-1,"\n\t\t"],[1,"            \n            "],[0,"var exis"]],"start1":8372,"start2":8372,"length1":19,"length2":41},{"diffs":[[0," false;\n"],[-1,"\n\t\t"],[1,"            \n            "],[0,"var from"]],"start1":8425,"start2":8425,"length1":19,"length2":41},{"diffs":[[0,"arget);\n"],[-1,"\t\t"],[1,"            "],[0,"from.for"]],"start1":8508,"start2":8508,"length1":18,"length2":28},{"diffs":[[0,"nction(e) {\n"],[-1,"\t\t\t"],[1,"                "],[0,"if (existing"]],"start1":8543,"start2":8543,"length1":27,"length2":40},{"diffs":[[0," 'undefined') {\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"existingSpring ="]],"start1":8637,"start2":8637,"length1":36,"length2":52},{"diffs":[[0,"[e.id];\n"],[-1,"\t\t\t}\n\t\t}, this);\n\n\t\t"],[1,"                }\n            }, this);\n            \n            "],[0,"if (exis"]],"start1":8706,"start2":8706,"length1":36,"length2":81},{"diffs":[[0,"ng !== false) {\n"],[-1,"\t\t\t"],[1,"                "],[0,"return new Layou"]],"start1":8795,"start2":8795,"length1":35,"length2":48},{"diffs":[[0,", 0.0);\n"],[-1,"\t\t}\n\n\t\t"],[1,"            }\n            \n            "],[0,"var to ="]],"start1":8915,"start2":8915,"length1":23,"length2":55},{"diffs":[[0,"ource);\n"],[-1,"\t\t"],[1,"            "],[0,"from.for"]],"start1":9010,"start2":9010,"length1":18,"length2":28},{"diffs":[[0,"ion(e){\n"],[-1,"\t\t\t"],[1,"                "],[0,"if (exis"]],"start1":9048,"start2":9048,"length1":19,"length2":32},{"diffs":[[0,"ned') {\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"existing"]],"start1":9146,"start2":9146,"length1":20,"length2":36},{"diffs":[[0,"d];\n"],[-1,"\t\t\t}\n\t\t}, this);\n\n\t\t"],[1,"                }\n            }, this);\n            \n            "],[0,"if ("]],"start1":9211,"start2":9211,"length1":28,"length2":73},{"diffs":[[0,"alse) {\n"],[-1,"\t\t\t"],[1,"                 "],[0,"return n"]],"start1":9304,"start2":9304,"length1":19,"length2":33},{"diffs":[[0,"0);\n"],[-1,"\t\t}\n\n\t\t"],[1,"            }\n            \n            "],[0,"this"]],"start1":9421,"start2":9421,"length1":15,"length2":47},{"diffs":[[0,"Spring(\n"],[-1,"\t\t\t"],[1,"            "],[0,"this.poi"]],"start1":9517,"start2":9517,"length1":19,"length2":28},{"diffs":[[0,"ess\n"],[-1,"\t\t);\n\t}\n\n\t"],[1,"            );\n        }\n        \n        "],[0,"retu"]],"start1":9606,"start2":9606,"length1":18,"length2":50},{"diffs":[[0,"ge.id];\n"],[-1,"};"],[1,"    },"],[0,"\n\n// cal"]],"start1":9678,"start2":9678,"length1":18,"length2":22},{"diffs":[[0," energy;\n};\n"],[1,"    \n    \n    \n    \n};\n\n\n"],[0,"\n\n\n\nvar __bi"]],"start1":12490,"start2":12490,"length1":24,"length2":49}]],"length":26165,"saved":false}
{"ts":1360850823769,"patch":[[{"diffs":[[0,"\n    },\n"],[-1,"\n"],[1,"    "],[0,"// callb"]],"start1":9685,"start2":9685,"length1":17,"length2":20},{"diffs":[[0,"int\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"eachNode"],[-1," = "],[1,":"],[0,"func"]],"start1":9746,"start2":9746,"length1":50,"length2":21},{"diffs":[[0,"ion(callback) {\n"],[-1,"\t"],[1,"        "],[0,"var t = this;\n\tt"]],"start1":9768,"start2":9768,"length1":33,"length2":40},{"diffs":[[0,"  var t = this;\n"],[-1,"\t"],[1,"        "],[0,"this.graph.nodes"]],"start1":9790,"start2":9790,"length1":33,"length2":40},{"diffs":[[0,"ion(n){\n"],[-1,"\t\t"],[1,"            "],[0,"callback"]],"start1":9844,"start2":9844,"length1":18,"length2":28},{"diffs":[[0,".point(n));\n"],[-1,"\t});\n};\n\n"],[1,"        });\n    },\n\n    "],[0,"// callback "]],"start1":9885,"start2":9885,"length1":33,"length2":48},{"diffs":[[0,"ing\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"eachEdge"],[-1," = "],[1,":"],[0,"func"]],"start1":9971,"start2":9971,"length1":50,"length2":21},{"diffs":[[0,"ion(callback) {\n"],[-1,"\t"],[1,"        "],[0,"var t = this;\n\tt"]],"start1":9993,"start2":9993,"length1":33,"length2":40},{"diffs":[[0,"  var t = this;\n"],[-1,"\t"],[1,"        "],[0,"this.graph.edges"]],"start1":10015,"start2":10015,"length1":33,"length2":40},{"diffs":[[0,"ch(function(e){\n"],[-1,"\t\t"],[1,"            "],[0,"callback.call(t,"]],"start1":10061,"start2":10061,"length1":34,"length2":44},{"diffs":[[0,"spring(e));\n"],[-1,"\t});\n};"],[1,"        });\n    },"],[0,"\n\n// callbac"]],"start1":10111,"start2":10111,"length1":31,"length2":42}]],"length":26184,"saved":false}
{"ts":1360850908725,"patch":[[{"diffs":[[0,"    },\n\n"],[1,"    "],[0,"// callb"]],"start1":10135,"start2":10135,"length1":16,"length2":20},{"diffs":[[0,"ing\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"each"]],"start1":10190,"start2":10190,"length1":39,"length2":12},{"diffs":[[0,"  eachSpring"],[-1," ="],[1,":"],[0," function(ca"]],"start1":10196,"start2":10196,"length1":26,"length2":25},{"diffs":[[0,"callback) {\n"],[-1,"\t"],[1,"        "],[0,"var t = this"]],"start1":10219,"start2":10219,"length1":25,"length2":32},{"diffs":[[0,"r t = this;\n"],[-1,"\t"],[1,"        "],[0,"this.graph.e"]],"start1":10241,"start2":10241,"length1":25,"length2":32},{"diffs":[[0,"ion(e){\n"],[-1,"\t\t"],[1,"            "],[0,"callback"]],"start1":10291,"start2":10291,"length1":18,"length2":28},{"diffs":[[0,"));\n"],[-1,"\t});\n};\n\n// Physics stuff\nLayout.ForceDirected.prototype."],[1,"        });\n    },\n\n    // Physics stuff\n    "],[0,"appl"]],"start1":10338,"start2":10338,"length1":65,"length2":53},{"diffs":[[0,"yCoulombsLaw"],[-1," = "],[1,":"],[0,"function() {"]],"start1":10391,"start2":10391,"length1":27,"length2":25},{"diffs":[[0,"aw:function() {\n"],[-1,"\t"],[1,"        "],[0,"this.eachNode(fu"]],"start1":10401,"start2":10401,"length1":33,"length2":40},{"diffs":[[0,"int1) {\n"],[-1,"\t\t"],[1,"            "],[0,"this.eac"]],"start1":10454,"start2":10454,"length1":18,"length2":28},{"diffs":[[0,"int2) {\n"],[-1,"\t\t\t"],[1,"                "],[0,"if (poin"]],"start1":10503,"start2":10503,"length1":19,"length2":32},{"diffs":[[0,"t2)\n"],[-1,"\t\t\t{\n\t\t\t\t"],[1,"                {\n                    "],[0,"var "]],"start1":10546,"start2":10546,"length1":17,"length2":46},{"diffs":[[0,"nt2.p);\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"var dist"]],"start1":10617,"start2":10617,"length1":20,"length2":36},{"diffs":[[0,"y zero)\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"var dire"]],"start1":10737,"start2":10737,"length1":20,"length2":36},{"diffs":[[0,"lise();\n"],[-1,"\n\t\t\t\t"],[1,"                    \n                    "],[0,"// apply"]],"start1":10788,"start2":10788,"length1":21,"length2":57},{"diffs":[[0,"d point\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"point1.a"]],"start1":10862,"start2":10862,"length1":20,"length2":36},{"diffs":[[0," 0.5));\n"],[-1,"\t\t\t\t"],[1,"                    "],[0,"point2.a"]],"start1":10971,"start2":10971,"length1":20,"length2":36},{"diffs":[[0,"));\n"],[-1,"\t\t\t}\n\t\t});\n\t});\n};"],[1,"                }\n            });\n        });\n    },"],[0,"\n\nLa"]],"start1":11085,"start2":11085,"length1":26,"length2":60}]],"length":26363,"saved":false}
{"ts":1360850972498,"patch":[[{"diffs":[[0,"},\n\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"appl"]],"start1":11139,"start2":11139,"length1":39,"length2":12},{"diffs":[[0,"ookesLaw"],[-1," ="],[1,":"],[0," functio"]],"start1":11153,"start2":11153,"length1":18,"length2":17},{"diffs":[[0,"w: function() {\n"],[-1,"\t"],[1,"        "],[0,"this.eachSpring("]],"start1":11160,"start2":11160,"length1":33,"length2":40},{"diffs":[[0,"pring){\n"],[-1,"\t\t"],[1,"            "],[0,"var d = "]],"start1":11210,"start2":11210,"length1":18,"length2":28},{"diffs":[[0," spring\n"],[-1,"\t\t"],[1,"            "],[0,"var disp"]],"start1":11304,"start2":11304,"length1":18,"length2":28},{"diffs":[[0,"tude();\n"],[-1,"\t\t"],[1,"            "],[0,"var dire"]],"start1":11366,"start2":11366,"length1":18,"length2":28},{"diffs":[[0,"lise();\n"],[-1,"\n\t\t"],[1,"            \n            "],[0,"// apply"]],"start1":11409,"start2":11409,"length1":19,"length2":41},{"diffs":[[0,"d point\n"],[-1,"\t\t"],[1,"            "],[0,"spring.p"]],"start1":11467,"start2":11467,"length1":18,"length2":28},{"diffs":[[0,"-0.5));\n"],[-1,"\t\t"],[1,"            "],[0,"spring.p"]],"start1":11557,"start2":11557,"length1":18,"length2":28},{"diffs":[[0,"));\n"],[-1,"\t});\n};\n\nLayout.ForceDirected.prototype."],[1,"        });\n    },\n\n    "],[0,"attr"]],"start1":11650,"start2":11650,"length1":48,"length2":32},{"diffs":[[0,"ToCentre"],[-1," = "],[1,":"],[0,"function"]],"start1":11685,"start2":11685,"length1":19,"length2":17},{"diffs":[[0,"unction() {\n"],[-1,"\t"],[1,"        "],[0,"this.eachNod"]],"start1":11695,"start2":11695,"length1":25,"length2":32},{"diffs":[[0,"e, point) {\n"],[-1,"\t\t"],[1,"            "],[0,"var directio"]],"start1":11741,"start2":11741,"length1":26,"length2":36},{"diffs":[[0,"(-1.0);\n"],[-1,"\t\t"],[1,"            "],[0,"point.ap"]],"start1":11797,"start2":11797,"length1":18,"length2":28},{"diffs":[[0,"50.0));\n"],[-1,"\t});\n};"],[1,"        });\n    },"],[0,"\n\n\nLayou"]],"start1":11870,"start2":11870,"length1":23,"length2":34}]],"length":26434,"saved":false}
{"ts":1360851001370,"patch":[[{"diffs":[[0," },\n"],[-1,"\n\nLayout.ForceDirected.prototype."],[1,"    "],[0,"upda"]],"start1":11893,"start2":11893,"length1":41,"length2":12},{"diffs":[[0,"Velocity"],[-1," ="],[1,":"],[0," functio"]],"start1":11907,"start2":11907,"length1":18,"length2":17},{"diffs":[[0,"ion(timestep) {\n"],[-1,"\t"],[1,"        "],[0,"this.eachNode(fu"]],"start1":11922,"start2":11922,"length1":33,"length2":40},{"diffs":[[0,"oint) {\n"],[-1,"\t\t"],[1,"            "],[0,"// Is th"]],"start1":11976,"start2":11976,"length1":18,"length2":28},{"diffs":[[0,"at your\n"],[-1,"\t\t"],[1,"            "],[0,"// integ"]],"start1":12059,"start2":12059,"length1":18,"length2":28},{"diffs":[[0," exist?\n"],[-1,"\t\t"],[1,"            "],[0,"point.v "]],"start1":12098,"start2":12098,"length1":18,"length2":28},{"diffs":[[0,"mping);\n"],[-1,"\t\t"],[1,"            "],[0,"point.a "]],"start1":12184,"start2":12184,"length1":18,"length2":28},{"diffs":[[0,"r(0,0);\n"],[-1,"\t});\n};"],[1,"        });\n    },"],[0,"\n\nLayout"]],"start1":12223,"start2":12223,"length1":23,"length2":34}]],"length":26462,"saved":false}
{"ts":1360851033352,"patch":[[{"diffs":[[0,"},\n\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"upda"]],"start1":12247,"start2":12247,"length1":39,"length2":12},{"diffs":[[0,"Position"],[-1," = "],[1,":"],[0,"function"]],"start1":12261,"start2":12261,"length1":19,"length2":17},{"diffs":[[0,"timestep) {\n"],[-1,"\t"],[1,"        "],[0,"this.eachNod"]],"start1":12279,"start2":12279,"length1":25,"length2":32},{"diffs":[[0,"oint) {\n"],[-1,"\t\t"],[1,"            "],[0,"// Same "]],"start1":12329,"start2":12329,"length1":18,"length2":28},{"diffs":[[0," all of\n"],[-1,"\t\t"],[1,"            "],[0,"// your "]],"start1":12410,"start2":12410,"length1":18,"length2":28},{"diffs":[[0,"n code?\n"],[-1,"\t\t"],[1,"            "],[0,"point.p "]],"start1":12448,"start2":12448,"length1":18,"length2":28},{"diffs":[[0,"step));\n"],[-1,"\t});\n};"],[1,"        });\n    },"],[0,"\n\n// Cal"]],"start1":12511,"start2":12511,"length1":23,"length2":34}]],"length":26481,"saved":false}
{"ts":1360851086198,"patch":[[{"diffs":[[0,"    },\n\n"],[1,"    "],[0,"// Calcu"]],"start1":12531,"start2":12531,"length1":16,"length2":20},{"diffs":[[0,"tem\n"],[-1,"Layout.ForceDirected.prototype."],[1,"    "],[0,"tota"]],"start1":12591,"start2":12591,"length1":39,"length2":12},{"diffs":[[0,"lEnergy "],[-1,"= "],[1,":"],[0,"function"]],"start1":12603,"start2":12603,"length1":18,"length2":17},{"diffs":[[0,"timestep) {\n"],[-1,"\t"],[1,"        "],[0,"var energy ="]],"start1":12621,"start2":12621,"length1":25,"length2":32},{"diffs":[[0," = 0.0;\n"],[-1,"\t"],[1,"        "],[0,"this.eac"]],"start1":12651,"start2":12651,"length1":17,"length2":24},{"diffs":[[0,"oint) {\n"],[-1,"\t\t"],[1,"            "],[0,"var spee"]],"start1":12697,"start2":12697,"length1":18,"length2":28},{"diffs":[[0,"tude();\n"],[-1,"\t\t"],[1,"            "],[0,"energy +"]],"start1":12742,"start2":12742,"length1":18,"length2":28},{"diffs":[[0," speed;\n"],[-1,"\t});\n\n\t"],[1,"        });\n        \n        "],[0,"return e"]],"start1":12795,"start2":12795,"length1":23,"length2":45},{"diffs":[[0,"energy;\n"],[-1,"};\n"],[0,"    "],[1,"}"],[0,"\n    \n  "]],"start1":12839,"start2":12839,"length1":23,"length2":21},{"diffs":[[0," }\n    \n    "],[-1,"\n"],[0,"    \n};\n\n\n\n\n"]],"start1":12850,"start2":12850,"length1":25,"length2":24},{"diffs":[[0,"  \n};\n\n\n"],[-1,"\n\n\n\n"],[0,"var __bi"]],"start1":12864,"start2":12864,"length1":20,"length2":16}]],"length":26506,"saved":false}
